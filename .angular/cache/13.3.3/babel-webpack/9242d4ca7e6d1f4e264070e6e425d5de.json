{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { State, Action, Selector } from \"@ngxs/store\";\nimport { tap } from 'rxjs/operators';\nimport { GetProjects } from './projects.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./project.service\";\nlet ProjectState = class ProjectState {\n  constructor(projectService) {\n    this.projectService = projectService;\n  }\n\n  static getProjectsList(state) {\n    return state.projects;\n  }\n\n  GetProjects(ctx) {\n    return this.projectService.fetchProjects(1).pipe(tap(response => {\n      const state = ctx.getState();\n      ctx.setState(Object.assign(Object.assign({}, state), {\n        projects: response\n      }));\n    }));\n  }\n\n};\n\nProjectState.ɵfac = function ProjectState_Factory(t) {\n  return new (t || ProjectState)(i0.ɵɵinject(i1.ProjectService));\n};\n\nProjectState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProjectState,\n  factory: ProjectState.ɵfac\n});\n\n__decorate([Action(GetProjects)], ProjectState.prototype, \"GetProjects\", null);\n\n__decorate([Selector()], ProjectState, \"getProjectsList\", null);\n\nProjectState = __decorate([State({\n  name: 'projects',\n  defaults: {\n    projects: []\n  }\n})], ProjectState);\nexport { ProjectState };","map":null,"metadata":{},"sourceType":"module"}