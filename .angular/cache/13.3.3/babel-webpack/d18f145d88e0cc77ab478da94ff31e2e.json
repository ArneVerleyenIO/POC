{"ast":null,"code":"import { CommonModule } from '@angular/common';\n/*\n * Modules\n */\n\nimport { RouterModule } from '@angular/router'; // Ngxs modules import\n\nimport { NgxsModule } from '@ngxs/store';\n/*\n *  Services\n */\n\nimport { ApiService } from './services/api.service';\nimport { StoryblokService } from './services/storyblok.service';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ProjectState } from './projects/projects.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"@ngxs/store\"; // import { RouterState } from './services/router.service';\n\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n}\n;\nexport let SharedModule = /*#__PURE__*/(() => {\n  class SharedModule {}\n\n  SharedModule.ɵfac = function SharedModule_Factory(t) {\n    return new (t || SharedModule)();\n  };\n\n  SharedModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: SharedModule\n  });\n  SharedModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [ApiService, StoryblokService],\n    imports: [[CommonModule, RouterModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), NgxsModule.forRoot([ProjectState // AppState\n    ])], TranslateModule]\n  });\n  return SharedModule;\n})();","map":null,"metadata":{},"sourceType":"module"}