{"ast":null,"code":"\"use strict\"; // import { Component, Input, OnInit, SimpleChange } from '@angular/core';\n// import { ApiService } from 'src/app/shared/services/api.service';\n// import { Project } from 'src/app/shared/models/project.model'\n// @Component({\n//   selector: 'app-projects-list',\n//   templateUrl: './projects-list.component.html',\n//   styleUrls: ['./projects-list.component.scss']\n// })\n// export class ProjectsListComponent implements OnInit {\n//   projects: Project[] = [];\n//   p: number = 1;\n//   selectedOption: string = 'asc';\n//   @Input() industryId: string = '';\n//   @Input() projectTypeId: string = '';\n//   @Input() frameworkId: string = '';\n//   options = [\n//     {\n//       name: 'Most Recent',\n//       value: 'desc'\n//     },\n//     {\n//       name: 'Oldest',\n//       value: 'asc'\n//     }\n//   ];\n//   constructor(\n//     private apiService: ApiService\n//   ) { }\n//   loadMore() {\n//     this.p = ++this.p;\n//     this.apiService.getProjects( this.selectedOption, this.p, this.frameworkId, this.industryId, this.projectTypeId)\n//     .subscribe(\n//       response => {\n//         response.forEach((project: Project) => {\n//           // this.projects.push(project);\n//           this.projects = [...this.projects,project];\n//         });\n//       },\n//       err => {\n//         console.log(err);\n//         console.log('No more pages to load');\n//       }\n//     );\n//   }\n//   ngOnInit(): void {\n//     console.log(this.selectedOption);\n//     this.apiService.getProjects(this.selectedOption, this.p, this.frameworkId, this.industryId, this.projectTypeId)\n//     .subscribe(\n//       response => {\n//         this.projects = response;\n//       }\n//     );\n//   }\n//   ngOnChanges () {\n//     this.apiService.getProjects(this.selectedOption, this.p, this.frameworkId, this.industryId, this.projectTypeId)\n//     .subscribe(\n//       response => {\n//         this.projects = response;\n//       }\n//     );\n//   }\n//   handleSortBy () {\n//     this.apiService.getProjects(this.selectedOption, this.p, this.frameworkId, this.industryId, this.projectTypeId)\n//     .subscribe(\n//       response => {\n//         this.projects = response;\n//       }\n//     );\n//   }\n// }","map":null,"metadata":{},"sourceType":"script"}